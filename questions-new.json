{
  "development": {
    "automation": {
      "0": {
          "question" : "Manual deployment, no process or automation",
          "description": "XXX"
      },
      "1": {
          "question" : "Automated builds (CI) + manual deployments with standardized procedures",
          "description": "XXX"
      },
      "2": {
        "question": "Automated testing and automated deployments in non-production",
        "description": "XXX"
      },
      "3": {
        "question": "Continuous Delivery strategy (only release candidates are tested) ",
        "description": "XXX"
      },
      "4": {
        "question" : "Push-button releases to production (Continuous Deployment and/or Operations)",
        "description": "XXX"    
      }
    },
    "methodology": {
      "0": {
          "question" : "No defined methodology",
          "description": "XXX"
      },
      "1": {
          "question" : "Defined Waterfall approach",
          "description": "XXX"
      },
      "2": {
        "question": "Limited agile development on new projects (not including operations)",
        "description": "XXX"
      },
      "3": {
        "question": "Agile methodology for Development and Operations teams",
        "description": "XXX"
      },
      "4": {
        "question" : "Development and Operations working together in cross-functional teams (DevOps)",
        "description": "XXX"    
      }
    },
    "architecture": {
       "0": {
          "question" : "Ad-hoc choice of application platforms and tooling. Limited understanding of contemporary architectural approaches.",
          "description": "XXX"
      },
      "1": {
          "question" : "Selected vendor technology roadmap. Initial understanding of new architectures and designs",
          "description": "XXX"
      },
      "2": {
        "question": "Iterative development of existing applications.",
        "description": "Limited legacy strategy and beginnings of new development architectures"
      },
      "3": {
        "question": "Focus on new application platforms & limited legacy platforms. ",
        "description": "Well defined architecture for new development projects and operating models"
      },
      "4": {
        "question" : "Holistic & defined overall development strategy. Good designs and architectures in place and under regular review",
        "description": "XXX"    
      }
    },
    "strategy": {
       "0": {
          "question" : "V-style requirements gathering (business communicates through fixed IT requirements)",
          "description": "XXX"
      },
      "1": {
          "question" : "Agile requirements gathering (requirements evolves during project development)",
          "description": "XXX"
      },
      "2": {
        "question": "MVP approach (incremental approach with visible feedbacks)",
        "description": "XXX"
      },
      "3": {
        "question": "Standard methodologies for discovering and evaluating opportunities",
        "description": "XXX"
      },
      "4": {
        "question" : "Transparent vision (business communicates through business requirements)",
        "description": "XXX"    
        }
    },
    "environment": {
      "0": {
          "question" : "Manual deployment, no process or automation",
          "description": "XXX"
      },
      "1": {
          "question" : "Minimal deployment, ad-hoc scripting; non repeatable",
          "description": "XXX"
      },
      "2": {
        "question": "Baseline CI processing (unit tests, manual testing)",
        "description": "XXX"
      },
      "3": {
        "question": "Advanced CI, >90% automated testing, pipelines, approval gateways",
        "description": "XXX"
      },
      "4": {
        "question" : "100% DevOps collaborative culture with energised cross-functional teams and constant improvement",
        "description": "XXX"    
        }
    }
  },
  "operations": {
    "automation": {
      "0": {
          "question" : "Core build for Operating system, manual ad-hoc provisioning. No patching or automation",
          "description": "Machines are (semi-)manually provisioned in an ad-hoc fashion, possibly with the support of a check-list. Configuration managed manually. Patching done ad-hoc, per-machine. Operating system deployed by one team and thrown over the fence to application mgmt team"
      },
      "1": {
          "question" : "Automated core build deployment, ad-hoc configuration management. Patching core build only. ",
          "description": "Automatic push-button deployment of generic operating-system, i.e not tailored to the application. No automated configuration management. Configuration changes after intial deployment done manually and ad-hoc. Little co-ordination between operating system and application patching. The end-to-end patching is an ad-hoc process. Operating system deployed by one team and thrown over the fence to application management team"
      },
      "2": {
        "question": "Defined OS lifecycle. Automated provisioning, configuration, patching and maintenance. Automated testing and QA of core build. ",
        "description": "Automatic push-button deployment of generic operating system, i.e not tailored to the application Operating system configuration is managed through an automated configuration mamagement system through out the life of the machine. No end-to-end (application  - operating system) configuration management though Automated testing of operating system deployment and config mgmt only. Application deployment & mgmt is outside the scope. Little coordination between operating system and application patching. The end-to-end patching  is an ad-hoc process. Operating system deployed by one team and thrown over the fence to application management team"
      },
      "3": {
        "question": "OS is deployed together with application through self service.",
        "description": "OS and application managed in unison throughout machine life using an automated system. Automated end to end testing and QA of application and OS. "
      },
      "4": {
        "question" : "Application is deployed together with minimal OS using an immutable image through self service. ",
        "description": "Automated process for creating and testing fully configured images. Defined process for automated updates to running machines by replacing them without application downtime.  "    
      }
    },
    "methodology": {
      "0": {
          "question" : "Ad-hoc reactive, little or no documentation, structured approach is missing or ineffective",
          "description": "Some procedures may exist for common tasks. Other tasks are done entirely ad-hoc, using the methods the operator performing the task judges to be the best. Very little documentation "
      },
      "1": {
          "question" : "Defined procedures. All tasks documented. Company-wide rigid security rules",
          "description": "Defined procedures exist for common tasks. When a task is encountered for which a procedure does not exist, the procedure is first documented before the task is carried out. Security rules are rigid, defined as specific settings, which do not easily apply to new technologies"
      },
      "2": {
        "question": "Service oriented approach. Defined SLAs. Dynamic security guidelines",
        "description": "In addition to the previous stage, each service have an service owner who is responsible for actively developing the service. Security Guidelines are defined as goals/capabilities which then are adapted by the  service owner to be applicable to the service. Defined SLA:s exist for the service, including limits on planned and unplanned outages"
      },
      "3": {
        "question": "Cross-functional teams exists for all services or group of services",
        "description": "In addition to the previous stage, services are managed by cross-functional teams involving all aspects of infrastructure operations, including application operators"
      },
      "4": {
        "question" : "Application is deployed using Continuous Delivery methods",
        "description": "In this stage, the addition is that application developers also are part of the operational teams Also, an automated CD method is used to deploy the application"    
      }
    },
    "architecture": {
      "0": {
          "question" : "Ad-hoc choice of future platforms",
          "description": "XXX"
      },
      "1": {
          "question" : "Selected vendor tech roadmap",
          "description": "XXX"
      },
      "2": {
        "question": "Focus on maintaining existing infrastructure",
        "description": "XXX"
      },
      "3": {
        "question": "Primary focus on new applications",
        "description": "XXX"
      },
      "4": {
        "question" : "Defined strategy for existing and new architectures",
        "description": "XXX"    
      }
    },
    "strategy": {
      "0": {
          "question" : "Instances of negative business impact",
          "description": "XXX"
      },
      "1": {
          "question" : "Good functioning service operations, few unscheduled outage but slow to deploy",
          "description": "XXX"
      },
      "2": {
        "question": "Project based service offerings, no unscheduled outages and rapid deployment",
        "description": "XXX"
      },
      "3": {
        "question": "Self service operations for development and the business",
        "description": "XXX"
      },
      "4": {
        "question" : "Transparent integration with project I.T.",
        "description": "XXX"    
      }
    },
    "environment": {
      "0": {
          "question" : "Standard Unix approach in a heavily Siloed structure",
          "description": "XXX"
      },
      "1": {
          "question" : "Reactive rather than Pro-active Operations teams, Water cooler discussions get more done",
          "description": "XXX"
      },
      "2": {
        "question": "Collaboration across siloes just beginning, agile understood, sense of urgency for change established",
        "description": "XXX"
      },
      "3": {
        "question": "Collaborative, empowered, connected, smaller, cross-functional teams.",
        "description": "Open Source and Inner Source solutions actively encouraged Communities of Practice forming,new collaborative way of working established"
      },
      "4": {
        "question" : "Energised cross-functional teams and constant improvement. ",
        "description": "Positive change realised, individuals contributing, Open Organisation understood"    
      }
    }
  }
  }